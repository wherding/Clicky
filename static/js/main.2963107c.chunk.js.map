{"version":3,"sources":["components/Header.js","components/Jumbotron.js","components/Card.js","components/Cardlist.js","components/Footer.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","this","cor","counter","React","Component","Jumbotron","_ref","children","style","height","clear","paddingTop","textAlign","class","Card","state","clicks","twoClicks","_this","setState","prevState","console","log","_this2","margin","onClick","id","width","src","avatar_url","Cardlist","cards","map","card","components_Card","Object","assign","selectedCard","Footer","href","target","data","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","App","incrementCounter","clickedCard","includes","alert","concat","components_Header","components_Jumbotron","components_Cardlist","onClickFunction","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2963107c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Header extends React.Component {\n\n\n   render(props) {\n     return (\n<nav className=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\" >\n               <p className=\"navbar-brand\" >\n                   Clicky Game\n       </p>\n               <p className=\"navbar-brand\">{this.props.cor}</p>\n               <p className=\"navbar-brand\">points: {this.props.counter}</p>\n           </nav>\n     );\n   }\n\n }\n\n\n\nexport default Header;","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n return (\n<div\n     style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n     className=\"jumbotron\"\n   >\n   <h1 class=\"display-4\">Rick and Morty Game!</h1>\n\n <p class=\"lead\">Click on an image to earn points, but don't click on any more than once!</p>\n\n   </div>\n );\n}\n\nexport default Jumbotron;","import React, { Component } from 'react';\n\n\n// const Card = (props) => {\n//     return(  \n//         <div style={{margin: \"1em\"}}  onClick = {props.onClick}  >\n//         <img width=\"300\" src={props.avatar_url}>\n//         </img>\n//         </div>\n//     )\n// }\n\nclass Card extends React.Component {\n    state = {clicks:0};\n    twoClicks = () =>{\n        this.setState = ((prevState) =>({\n            clicks: prevState.clicks +1\n          \n        }));\n\n        if(this.state.clicks>1){\n            console.log(\"yay!\");\n        }\n    }\n\n   render(props) {\n    return(  \n                <div style={{margin: \"1em\"}}  onClick = {() =>this.props.onClick(this.props.id)}   >\n                <img width=\"300\" src={this.props.avatar_url}>\n                </img>\n                </div>\n            );\n   }\n\n }\n\n\nexport default Card;","import React, { Component } from 'react';\nimport Card from './Card';\n\n\n\nconst Cardlist = (props) => {\n    return(\n<div className=\"container\">\n<div className= \"row\">\n            {props.cards.map(card => <Card {...card} onClick={props.selectedCard} />)}\n            \n        </div>\n</div>\n        \n      \n      \n    )\n}\n\n\n\nexport default Cardlist;","import React from \"react\";\n\n\nfunction Footer() {\n  return (\n      <div style={{paddingTop: \"5em\"}}>\n  <div class=\"card text-center\" >\n   \n   <div class=\"card-body\">\n     <h5 class=\"card-title\">React Js Clicky Game</h5>\n     <a href=\"https://github.com/RickandMorty\" target=\" \" class=\"btn btn-primary\">GitHub</a>\n   </div>\n \n </div>\n      </div>\n  \n  );\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Jumbotron from './components/Jumbotron';\nimport Cardlist from './components/Cardlist';\nimport Footer from './components/Footer';\n\nlet data = [\n  {\n    id:1,\n      avatar_url:\"https://images3.alphacoders.com/633/thumb-1920-633288.png\"\n  },\n  {id:2,\n      avatar_url:\"https://images3.alphacoders.com/606/thumb-1920-606020.jpg\"\n  },\n  {id:3,\n      avatar_url:\"https://images.alphacoders.com/876/thumb-1920-876589.jpg\"\n  },\n  {id:4,\n    avatar_url:\"https://images2.alphacoders.com/642/thumb-1920-642540.png\"\n},\n{ id:5,\n    avatar_url:\"https://images7.alphacoders.com/633/thumb-1920-633262.png\"\n},\n{ id:6,\n    avatar_url:\"https://images8.alphacoders.com/642/642527.jpg\"\n},\n{ id:7,\n  avatar_url:\"https://images6.alphacoders.com/625/thumb-1920-625916.jpg\"\n},\n{ id:8,\n  avatar_url:\"https://images4.alphacoders.com/633/thumb-1920-633222.jpg\"\n},\n{ id:9,\n  avatar_url:\"https://images.alphacoders.com/633/thumb-1920-633244.jpg\"\n},\n{id:10,\n  avatar_url:\"https://images6.alphacoders.com/656/thumb-1920-656827.jpg\"\n},\n{id:11,\n  avatar_url:\"https://images.alphacoders.com/633/thumb-1920-633249.jpg\"\n},\n{id:12,\n  avatar_url:\"https://images3.alphacoders.com/633/thumb-1920-633240.jpg\"\n}\n];\n\nfunction shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nclass App extends Component {\n  state = {counter:0,\n  cor: \"Click an image to get started!\",\n  clicks: []};\n  incrementCounter = (clickedCard) => {\n   this.setState((prevState) => ({\n     counter: prevState.counter + 1\n   }));\n   this.setState((prevState) =>({\n     cor: prevState.cor = \"correct\"\n\n   }));\n//add new content\n\nif(!this.state.clicks.includes(clickedCard)){\n  this.setState(prevState => ({\n    clicks: prevState.clicks.concat(clickedCard)\n    \n  }));\n}\nelse{\n  alert(\"you lose!\")\n}\n//end new content \n   if (this.state.counter >= 12){\n    this.setState((prevState) => ({\n    counter: prevState.counter = 0\n    }));\n\n          }\n   shuffle(data);\n };\n\n selectedCard = (clickedCard) =>{\n  console.log(\"test\") \n  if(!this.state.clicks.includes(clickedCard)){\n    this.setState(prevState => ({\n      clicks: prevState.clicks.concat(clickedCard)\n      \n    }));\n    //add stiff that happens when you dont lose:\n    this.setState((prevState) => ({\n      counter: prevState.counter + 1\n    }));\n    this.setState((prevState) =>({\n      cor: prevState.cor = \"correct\"\n \n    }));\n\n    ///end winning block\n  }\n  else{\n    alert(\"You guessed incorrectly!!\")\n    this.setState((prevState) =>({\n      cor: prevState.cor = \"You guessed incorrectly!!\"\n \n    }));\n    this.setState((prevState) => ({\n      counter: prevState.counter = 0,\n      clicks: prevState.clicks = []\n      }));\n  }\n  shuffle(data);\n };\n\n  render() {\n    return (\n      <body>\n        <Header  counter={this.state.counter} cor={this.state.cor}/>\n        <Jumbotron />\n        <Cardlist cards={data} onClickFunction={this.incrementCounter} selectedCard={this.selectedCard}/>\n\n        <Footer />\n      </body>\n\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}